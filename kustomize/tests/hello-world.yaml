---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hello-world
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: hello-world
  template:
    metadata:
      labels:
        app: hello-world
    spec:
      containers:
      - name: nginx
        image: nginx:latest
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
        ports:
        - containerPort: 80
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 10
      volumes:
      - name: nginx-config
        configMap:
          name: nginx-config 
---
apiVersion: v1
kind: Service
metadata:
  name: hello-world
  namespace: default
  labels:
    app: hello-world
  annotations:
    tailscale.com/hostname: "hello-world"
spec:
  type: LoadBalancer
  ports:
    - port: 80
      targetPort: 80
      name: http
  selector:
    app: hello-world
  loadBalancerClass: tailscale
---
apiVersion: v1
kind: Service
metadata:
  name: hello-world-customerderp
  namespace: default
  annotations:
    tailscale.com/tailnet-fqdn: default-hello-world.tail8eff9.ts.net
    tailscale.com/proxy-group: common-egress
spec:
  externalName: placeholder   # any value - will be overwritten by operator
  type: ExternalName 
  ports:
  - name: http # any value
    port: 80
    protocol: TCP
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: default
data:
  nginx.conf: |
    events {}
    http {
      log_format custom '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent"';
      access_log /dev/stdout custom;
      error_log /dev/stderr;

      server {
        listen 80;
        listen [::]:80;  # Add IPv6 support

        location / {
          add_header Content-Type text/plain;
          return 200 "Hello, World! I'm from customderp!\n";
        }
        
        location /health {
          add_header Content-Type text/plain;
          return 200 "OK\n";
        }
      }
    } 